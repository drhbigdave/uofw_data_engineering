{"paragraphs":[{"text":"%spark2.conf\n\nmaster  local[*]\n\n# set driver memrory to 12g\nspark.driver.memory 12g\n\n# set executor memrory 4g\nspark.executor.memory  4g\n\n#set dependencies\n#os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages org.apache.spark:spark-sql-kafka-0-10_2.11:2.3.0 pyspark-shell'","user":"anonymous","dateUpdated":"2019-06-12T00:49:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1559773016423_-1430968540","id":"20190605-221656_1994414780","dateCreated":"2019-06-05T22:16:56+0000","dateStarted":"2019-06-12T00:49:19+0000","dateFinished":"2019-06-12T00:49:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:402"},{"text":"%spark2.pyspark\ndf = spark \\\n  .readStream \\\n  .format(\"kafka\") \\\n  .option(\"kafka.bootstrap.servers\", \"localhost:6667\") \\\n  .option(\"subscribe\", \"raw_temps\") \\\n  .option(\"startingOffsets\", \"earliest\") \\\n  .load()\n  \ndf.printSchema()\n\n\n","user":"anonymous","dateUpdated":"2019-06-12T02:38:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- key: binary (nullable = true)\n |-- value: binary (nullable = true)\n |-- topic: string (nullable = true)\n |-- partition: integer (nullable = true)\n |-- offset: long (nullable = true)\n |-- timestamp: timestamp (nullable = true)\n |-- timestampType: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1559773074667_1061851984","id":"20190605-221754_1028538256","dateCreated":"2019-06-05T22:17:54+0000","dateStarted":"2019-06-12T02:38:26+0000","dateFinished":"2019-06-12T02:38:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:403"},{"text":"%spark2.pyspark\ndata = df.selectExpr(\"CAST(key AS STRING)\", \"CAST(value AS STRING)\")\ndata.printSchema()","user":"anonymous","dateUpdated":"2019-06-12T02:39:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- key: string (nullable = true)\n |-- value: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1560217629253_-1039970098","id":"20190611-014709_529863661","dateCreated":"2019-06-11T01:47:09+0000","dateStarted":"2019-06-12T02:39:53+0000","dateFinished":"2019-06-12T02:39:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:404"},{"text":"%spark2.pyspark\nfrom pyspark.sql.types import StructType, StructField, StringType, IntegerType, TimestampType, ArrayType\n\nschema = StructType([\n    StructField(\"timestamp\", TimestampType()),\n    StructField(\"server\", StringType()),\n    StructField(\"sensors\", StructType([\n        StructField(\"sensor1\", IntegerType()),\n        StructField(\"sensor2\", IntegerType()),\n        StructField(\"sensor3\", IntegerType()),\n        StructField(\"sensor4\", IntegerType()),\n        StructField(\"sensor5\", IntegerType()),\n        StructField(\"sensor6\", IntegerType()),\n        StructField(\"sensor7\", IntegerType()),\n        StructField(\"sensor8\", IntegerType()),\n        StructField(\"sensor9\", IntegerType()),\n        StructField(\"sensor10\", IntegerType())]))\n        ])","user":"anonymous","dateUpdated":"2019-06-12T04:01:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1560309962803_-1478438322","id":"20190612-032602_811861069","dateCreated":"2019-06-12T03:26:02+0000","dateStarted":"2019-06-12T04:01:29+0000","dateFinished":"2019-06-12T04:01:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:405"},{"text":"%spark2.pyspark\nfrom pyspark.sql.functions import from_json\nparsed = data.select(from_json('value', schema))\nparsed.printSchema()","user":"anonymous","dateUpdated":"2019-06-12T04:01:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- jsontostructs(value): struct (nullable = true)\n |    |-- timestamp: timestamp (nullable = true)\n |    |-- server: string (nullable = true)\n |    |-- sensors: struct (nullable = true)\n |    |    |-- sensor1: integer (nullable = true)\n |    |    |-- sensor2: integer (nullable = true)\n |    |    |-- sensor3: integer (nullable = true)\n |    |    |-- sensor4: integer (nullable = true)\n |    |    |-- sensor5: integer (nullable = true)\n |    |    |-- sensor6: integer (nullable = true)\n |    |    |-- sensor7: integer (nullable = true)\n |    |    |-- sensor8: integer (nullable = true)\n |    |    |-- sensor9: integer (nullable = true)\n |    |    |-- sensor10: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1560310005312_-1135779153","id":"20190612-032645_2035769331","dateCreated":"2019-06-12T03:26:45+0000","dateStarted":"2019-06-12T04:01:38+0000","dateFinished":"2019-06-12T04:01:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:406"},{"text":"%spark2.pyspark\nflat = parsed.select('jsontostructs(value).*').select('timestamp', 'server', 'sensors.*')\nflat.printSchema()","user":"anonymous","dateUpdated":"2019-06-12T04:03:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- timestamp: timestamp (nullable = true)\n |-- server: string (nullable = true)\n |-- sensor1: integer (nullable = true)\n |-- sensor2: integer (nullable = true)\n |-- sensor3: integer (nullable = true)\n |-- sensor4: integer (nullable = true)\n |-- sensor5: integer (nullable = true)\n |-- sensor6: integer (nullable = true)\n |-- sensor7: integer (nullable = true)\n |-- sensor8: integer (nullable = true)\n |-- sensor9: integer (nullable = true)\n |-- sensor10: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1560310461478_297428012","id":"20190612-033421_923507010","dateCreated":"2019-06-12T03:34:21+0000","dateStarted":"2019-06-12T04:03:46+0000","dateFinished":"2019-06-12T04:03:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:407"},{"text":"%spark2.pyspark\ndata.show()","user":"anonymous","dateUpdated":"2019-06-12T02:40:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 1: data.show()\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-6899065849619674326.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/hdp/current/spark2-client/python/lib/pyspark.zip/pyspark/sql/dataframe.py\", line 350, in show\n    print(self._jdf.showString(n, 20, vertical))\n  File \"/usr/hdp/current/spark2-client/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py\", line 1257, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/usr/hdp/current/spark2-client/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 69, in deco\n    raise AnalysisException(s.split(': ', 1)[1], stackTrace)\nAnalysisException: u'Queries with streaming sources must be executed with writeStream.start();;\\nkafka'\n"}]},"apps":[],"jobName":"paragraph_1560217771337_-966715148","id":"20190611-014931_1568716140","dateCreated":"2019-06-11T01:49:31+0000","dateStarted":"2019-06-12T02:40:27+0000","dateFinished":"2019-06-12T02:40:28+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:408"},{"text":"%spark2.pyspark\nfrom pyspark.sql.types import StructType, StructField, StringType, IntegerType, TimestampType, ArrayType\n# WARNING - putting the ArrayType in the schema added an extra element that killed the star flattening\nschema = StructType([\n    StructField(\"timestamp\", TimestampType()),\n    StructField(\"server\", StringType()),\n    StructField(\"sensors\", ArrayType(StructType([\n        StructField(\"sensor1\", IntegerType()),\n        StructField(\"sensor2\", IntegerType()),\n        StructField(\"sensor3\", IntegerType()),\n        StructField(\"sensor4\", IntegerType()),\n        StructField(\"sensor5\", IntegerType()),\n        StructField(\"sensor6\", IntegerType()),\n        StructField(\"sensor7\", IntegerType()),\n        StructField(\"sensor8\", IntegerType()),\n        StructField(\"sensor9\", IntegerType()),\n        StructField(\"sensor10\", IntegerType())])))\n        ])","user":"anonymous","dateUpdated":"2019-06-12T04:03:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1560305020783_1170052754","id":"20190612-020340_380185222","dateCreated":"2019-06-12T02:03:40+0000","dateStarted":"2019-06-12T03:00:06+0000","dateFinished":"2019-06-12T03:00:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:409"},{"text":"%spark2.pyspark\ndf1 = spark.read.json('file:///tmp/raw_temps.json')\n\ndf1.printSchema()\ndf1.show()","user":"anonymous","dateUpdated":"2019-06-12T03:02:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- sensors: struct (nullable = true)\n |    |-- sensor1: long (nullable = true)\n |    |-- sensor10: long (nullable = true)\n |    |-- sensor2: long (nullable = true)\n |    |-- sensor3: long (nullable = true)\n |    |-- sensor4: long (nullable = true)\n |    |-- sensor5: long (nullable = true)\n |    |-- sensor6: long (nullable = true)\n |    |-- sensor7: long (nullable = true)\n |    |-- sensor8: long (nullable = true)\n |    |-- sensor9: long (nullable = true)\n |-- server: string (nullable = true)\n |-- timestamp: string (nullable = true)\n\n+--------------------+---------+-------------------+\n|             sensors|   server|          timestamp|\n+--------------------+---------+-------------------+\n|[28, 38, 39, 28, ...| c6-1c1s2|2019-06-06 04:06:12|\n|[24, 36, 0, 24, 2...|c15-3c0s1|2019-06-06 04:06:13|\n|[29, 41, 40, 29, ...|c15-0c1s6|2019-06-06 04:06:13|\n|[27, 36, 38, 26, ...|c19-2c0s3|2019-06-06 04:06:13|\n|[30, 41, 40, 30, ...|c21-0c1s2|2019-06-06 04:06:13|\n|[31, 40, 38, 31, ...|c23-7c2s6|2019-06-06 04:06:13|\n|[29, 42, 42, 29, ...|c17-1c1s3|2019-06-06 04:06:13|\n|[33, 41, 40, 33, ...| c6-7c2s2|2019-06-06 04:06:13|\n|[30, 45, 39, 30, ...| c8-0c1s0|2019-06-06 04:06:13|\n|[35, 44, 43, 35, ...|c23-1c2s3|2019-06-06 04:06:13|\n|[33, 46, 45, 33, ...| c1-4c1s7|2019-06-06 04:06:13|\n|[26, 36, 37, 26, ...|c13-0c0s2|2019-06-06 04:06:13|\n|[24, 37, 38, 24, ...|c14-2c0s6|2019-06-06 04:06:13|\n|[31, 41, 40, 31, ...|c24-3c2s6|2019-06-06 04:06:13|\n|[28, 38, 39, 28, ...| c4-5c1s1|2019-06-06 04:06:13|\n|[33, 42, 40, 33, ...|c11-4c2s1|2019-06-06 04:06:13|\n|[28, 39, 40, 28, ...|c10-3c1s7|2019-06-06 04:06:13|\n|[34, 43, 42, 34, ...| c5-2c2s5|2019-06-06 04:06:13|\n|[26, 36, 37, 26, ...| c8-2c0s5|2019-06-06 04:06:13|\n|[27, 38, 39, 27, ...|c22-2c0s6|2019-06-06 04:06:13|\n+--------------------+---------+-------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1560126393099_2067354522","id":"20190610-002633_484420443","dateCreated":"2019-06-10T00:26:33+0000","dateStarted":"2019-06-12T03:02:34+0000","dateFinished":"2019-06-12T03:02:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:410"},{"text":"%spark2.pyspark\ndf1.select(df1.timestamp.cast(TimestampType()), df1.server.cast(StringType()), df1.sensor.*.cast(IntegerType())).printSchema()\ndf1.selecExpr('CAST(timestamp as TimestampType)')","user":"anonymous","dateUpdated":"2019-06-12T03:24:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-6899065849619674326.py\", line 364, in <module>\n    code = compile('\\n'.join(stmts), '<stdin>', 'exec', ast.PyCF_ONLY_AST, 1)\n  File \"<stdin>\", line 1\n    df1.select(df1.timestamp.cast(TimestampType()), df1.server.cast(StringType()), df1.sensor.*.cast(IntegerType())).printSchema()\n                                                                                              ^\nSyntaxError: invalid syntax\n"}]},"apps":[],"jobName":"paragraph_1560308668980_-1371284812","id":"20190612-030428_1607518441","dateCreated":"2019-06-12T03:04:28+0000","dateStarted":"2019-06-12T03:22:37+0000","dateFinished":"2019-06-12T03:22:37+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:411"},{"text":"%spark2.pyspark\nflat_df = df1.select('timestamp', 'server', 'sensors.*')\nflat_df.show()\nflat_df.printSchema()","user":"anonymous","dateUpdated":"2019-06-12T03:16:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+---------+-------+--------+-------+-------+-------+-------+-------+-------+-------+-------+\n|          timestamp|   server|sensor1|sensor10|sensor2|sensor3|sensor4|sensor5|sensor6|sensor7|sensor8|sensor9|\n+-------------------+---------+-------+--------+-------+-------+-------+-------+-------+-------+-------+-------+\n|2019-06-06 04:06:12| c6-1c1s2|     28|      38|     39|     28|     22|     26|     40|     26|     23|     26|\n|2019-06-06 04:06:13|c15-3c0s1|     24|      36|      0|     24|     22|     25|     41|     25|     23|     25|\n|2019-06-06 04:06:13|c15-0c1s6|     29|      41|     40|     29|     25|     27|     38|     27|     25|     28|\n|2019-06-06 04:06:13|c19-2c0s3|     27|      36|     38|     26|     22|     25|     38|     25|     23|     26|\n|2019-06-06 04:06:13|c21-0c1s2|     30|      41|     40|     30|     25|     28|     41|     28|     25|     28|\n|2019-06-06 04:06:13|c23-7c2s6|     31|      40|     38|     31|     28|     28|     39|     28|     24|     31|\n|2019-06-06 04:06:13|c17-1c1s3|     29|      42|     42|     29|     26|     29|     41|     29|     26|     29|\n|2019-06-06 04:06:13| c6-7c2s2|     33|      41|     40|     33|     25|     28|     38|     28|     25|     32|\n|2019-06-06 04:06:13| c8-0c1s0|     30|      45|     39|     30|     24|     28|     38|     28|     25|     30|\n|2019-06-06 04:06:13|c23-1c2s3|     35|      44|     43|     35|     29|     31|     42|     31|     27|     35|\n|2019-06-06 04:06:13| c1-4c1s7|     33|      46|     45|     33|     28|     32|     49|     32|     30|     32|\n|2019-06-06 04:06:13|c13-0c0s2|     26|      36|     37|     26|     20|     24|     40|     24|     23|     26|\n|2019-06-06 04:06:13|c14-2c0s6|     24|      37|     38|     24|     21|     22|     37|     22|     23|     23|\n|2019-06-06 04:06:13|c24-3c2s6|     31|      41|     40|     31|     25|     29|     40|     29|     25|     31|\n|2019-06-06 04:06:13| c4-5c1s1|     28|      38|     39|     28|     24|     27|     40|     27|     24|     27|\n|2019-06-06 04:06:13|c11-4c2s1|     33|      42|     40|     33|     28|     29|     40|     29|     28|     33|\n|2019-06-06 04:06:13|c10-3c1s7|     28|      39|     40|     28|     24|     28|     42|     28|     24|     28|\n|2019-06-06 04:06:13| c5-2c2s5|     34|      43|     42|     34|     27|     30|     41|     29|     28|     34|\n|2019-06-06 04:06:13| c8-2c0s5|     26|      36|     37|     26|     23|     24|     37|     24|     22|     25|\n|2019-06-06 04:06:13|c22-2c0s6|     27|      38|     39|     27|     24|     27|     41|     27|     23|     26|\n+-------------------+---------+-------+--------+-------+-------+-------+-------+-------+-------+-------+-------+\nonly showing top 20 rows\n\nroot\n |-- timestamp: string (nullable = true)\n |-- server: string (nullable = true)\n |-- sensor1: long (nullable = true)\n |-- sensor10: long (nullable = true)\n |-- sensor2: long (nullable = true)\n |-- sensor3: long (nullable = true)\n |-- sensor4: long (nullable = true)\n |-- sensor5: long (nullable = true)\n |-- sensor6: long (nullable = true)\n |-- sensor7: long (nullable = true)\n |-- sensor8: long (nullable = true)\n |-- sensor9: long (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1560127418085_570871315","id":"20190610-004338_1246341246","dateCreated":"2019-06-10T00:43:38+0000","dateStarted":"2019-06-12T03:16:15+0000","dateFinished":"2019-06-12T03:16:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:412"},{"text":"%spark2.pyspark\nflat_df.select(flat_df.timestamp.cast(TimestampType()), flat_df.server.cast(StringType()), flat_df.sensor1.cast(IntegerType())).printSchema()\n","user":"anonymous","dateUpdated":"2019-06-12T03:20:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- timestamp: timestamp (nullable = true)\n |-- server: string (nullable = true)\n |-- sensor1: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1560309388059_-1230553045","id":"20190612-031628_666841497","dateCreated":"2019-06-12T03:16:28+0000","dateStarted":"2019-06-12T03:20:06+0000","dateFinished":"2019-06-12T03:20:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:413"},{"text":"%spark2.pyspark\ninvalid_df = flat_df.filter(('sensor1 <= 0 or sensor2 <= 0 or sensor3 <= 0 or sensor4 <= 0 or sensor5 <= 0 or sensor6 <= 0 or sensor7 <= 0\\\n                    or sensor8 <= 0 or sensor9 <= 0 or sensor10 <= 0'))","user":"anonymous","dateUpdated":"2019-06-12T01:52:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1560302318856_59188342","id":"20190612-011838_980079667","dateCreated":"2019-06-12T01:18:38+0000","dateStarted":"2019-06-12T01:50:53+0000","dateFinished":"2019-06-12T01:50:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:414"},{"text":"%spark2.pyspark\nflat_df.filter(('sensor1 > 0 or sensor2 > 0')).groupBy('server').agg({'sensor1':'avg', 'sensor2':'avg'}).show()","user":"anonymous","dateUpdated":"2019-06-12T01:57:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+------------+------------+\n|   server|avg(sensor2)|avg(sensor1)|\n+---------+------------+------------+\n| c7-6c2s0|        40.0|        31.0|\n| c3-5c0s3|        38.0|        26.0|\n|c13-1c1s2|        41.0|        29.0|\n| c2-5c0s6|        38.0|        24.0|\n|c14-3c0s0|        37.0|        27.0|\n| c7-1c2s6|        40.0|        32.0|\n|c10-3c1s3|        39.0|        27.0|\n|c23-7c1s5|        39.0|        27.0|\n|c19-5c0s5|        38.0|        24.0|\n| c1-2c0s7|        38.0|        25.0|\n|c13-1c0s2|        36.0|        25.0|\n| c3-7c1s1|        44.0|        31.0|\n|c23-0c1s2|        41.0|        30.0|\n| c7-4c0s2|        40.0|        27.0|\n| c7-3c2s0|        39.0|        31.0|\n| c8-1c2s6|        42.0|        33.0|\n| c7-3c0s3|        37.0|        24.0|\n|c18-1c0s4|        38.0|        26.0|\n|c21-0c0s1|        38.0|        25.0|\n|c17-0c0s6|        39.0|        28.0|\n+---------+------------+------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1560302323937_1958083577","id":"20190612-011843_1139359067","dateCreated":"2019-06-12T01:18:43+0000","dateStarted":"2019-06-12T01:57:50+0000","dateFinished":"2019-06-12T01:57:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:415"},{"text":"%spark2.pyspark\nprint(flat_df.where(flat_df['sensor2'].isNotNull()).select('sensor1').count())\nprint(flat_df.where(flat_df['sensor2'].isNull()).count())\nprint(flat_df.count())","user":"anonymous","dateUpdated":"2019-06-12T00:50:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1401\n13\n1414\n"}]},"apps":[],"jobName":"paragraph_1560218614063_123026260","id":"20190611-020334_274954598","dateCreated":"2019-06-11T02:03:34+0000","dateStarted":"2019-06-12T00:50:48+0000","dateFinished":"2019-06-12T00:50:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:416"},{"text":"%spark2.pyspark\nvalid_df = flat_df.select('timestamp','server','sensor1','sensor2').na.drop()","user":"anonymous","dateUpdated":"2019-06-11T02:20:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1560177331411_1294684857","id":"20190610-143531_906337306","dateCreated":"2019-06-10T14:35:31+0000","dateStarted":"2019-06-11T02:20:41+0000","dateFinished":"2019-06-11T02:20:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:417"},{"text":"%spark2.pyspark\nprint(valid_df.where(flat_df['sensor2'].isNotNull()).select('sensor1').count())\nprint(valid_df.where(flat_df['sensor2'].isNull()).count())\nprint(valid_df.count())","user":"anonymous","dateUpdated":"2019-06-11T02:21:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1400\n0\n1400\n"}]},"apps":[],"jobName":"paragraph_1560219627317_-424427680","id":"20190611-022027_2062382835","dateCreated":"2019-06-11T02:20:27+0000","dateStarted":"2019-06-11T02:21:12+0000","dateFinished":"2019-06-11T02:21:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:418"},{"text":"%spark2.pyspark\n","user":"anonymous","dateUpdated":"2019-06-11T02:21:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1560219672782_-191347901","id":"20190611-022112_570692431","dateCreated":"2019-06-11T02:21:12+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:419"}],"name":"Hagan Assignment 3","id":"2EEAW2S5M","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}